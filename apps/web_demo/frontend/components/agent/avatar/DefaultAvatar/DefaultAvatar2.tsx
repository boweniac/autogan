// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Command: npx gltfjsx@6.2.16 public/Avatar/default.glb -o components/agent/avatar/DefaultAvatar/DefaultAvatar2.tsx --types 
// */

// import * as THREE from 'three'
// import React, { useEffect, useRef } from 'react'
// import { useAnimations, useGLTF } from '@react-three/drei'
// import { GLTF } from 'three-stdlib'

// type ActionName = 'actionNameOne' | 'actionNameTwo';

// interface GLTFAction extends THREE.AnimationClip {
//   name: ActionName;
// }

// interface MyGLTFResult extends GLTFResult {
//   animations: GLTFAction[];
// }

// type GLTFResult = GLTF & {
//   nodes: {
//     Wolf3D_Hair: THREE.SkinnedMesh
//     Wolf3D_Glasses: THREE.SkinnedMesh
//     EyeLeft: THREE.SkinnedMesh
//     EyeRight: THREE.SkinnedMesh
//     Wolf3D_Head: THREE.SkinnedMesh
//     Wolf3D_Teeth: THREE.SkinnedMesh
//     Wolf3D_Outfit_Top: THREE.SkinnedMesh
//     Wolf3D_Outfit_Bottom: THREE.SkinnedMesh
//     Wolf3D_Outfit_Footwear: THREE.SkinnedMesh
//     Wolf3D_Body: THREE.SkinnedMesh
//     Hips: THREE.Bone
//   }
//   materials: {
//     Wolf3D_Hair: THREE.MeshStandardMaterial
//     Wolf3D_Glasses: THREE.MeshStandardMaterial
//     Wolf3D_Eye: THREE.MeshStandardMaterial
//     Wolf3D_Skin: THREE.MeshStandardMaterial
//     Wolf3D_Teeth: THREE.MeshStandardMaterial
//     Wolf3D_Outfit_Top: THREE.MeshStandardMaterial
//     Wolf3D_Outfit_Bottom: THREE.MeshStandardMaterial
//     Wolf3D_Outfit_Footwear: THREE.MeshStandardMaterial
//     Wolf3D_Body: THREE.MeshStandardMaterial
//   }
//   animations: GLTFAction[]
// }

// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

// const isBrowser = typeof window !== 'undefined';

// export function DefaultAvatar(props: JSX.IntrinsicElements['group']) {

//   // const { nodes, materials } = useGLTF('/avatar/default.glb') as GLTFResult

//   const groupRef = useRef<THREE.Group>(null);
//   const { nodes, materials, animations } = useGLTF('/avatar/default.glb') as MyGLTFResult;

//   const { actions } = useAnimations(animations, groupRef);

//   useEffect(() => {
//     console.log(actions);
//     actions?.actionNameOne?.play();
//   });

//   return (
//     <group {...props} dispose={null}>
//       <primitive object={nodes.Hips} />
//       <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Glasses.geometry} material={materials.Wolf3D_Glasses} skeleton={nodes.Wolf3D_Glasses.skeleton} />
//       <skinnedMesh geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} />
//       <skinnedMesh geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
//       <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
//     </group>
//   )
// }

// // useGLTF.preload('/avatar/default.glb')
